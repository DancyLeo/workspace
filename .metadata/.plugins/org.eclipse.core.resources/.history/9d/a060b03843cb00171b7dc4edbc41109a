package algorithm.search;
/*二分查找算法
 * 作者：夜苍山
 */
public class BinarySearch {
	private int[] A;
	public BinarySearch(int[] A) {
		this.A=A;
	}
	private int binarySearch(int key) {
		int left=0;//待检索区域左边界
		int right=A.length-1;//待检索区域右边界
		while(left<=right) {//当左边界小于右边界时，说明带检索区域有两个以上的元素，需要继续二分查找
			int middle=(left+right)/2;//求出待检索区域待中间元素下标
			if(key==A[middle]) {//如果关键字等于中间下标元素
				return middle;//检索成功，返回检索到的元素的下标
			}
			if(key>A[middle]) {//如果关键字大于中间下标元素，说明检索的结果在右半待检索区域
				left=middle+1;//将左半边界下标变为中间元素的后一个元素下标
			}
			else right=middle-1;//如果关键字小于中间下标元素，说明检索的结果在左半待检索区域
		}						//将右半边界下标变为中间元素的前一个元素下标
		return -1;				//未检索到关键字元素，返回负一表示检索失败
	}
	public static void main(String[] args) {
		int[] A= {1,2,2,3,4,5,6,7,8};
		BinarySearch b=new BinarySearch(A);
		for(int i=0;i<=A.length;i++) 
		System.out.println(b.binarySearch(i));	
	}
}
